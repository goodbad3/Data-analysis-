分组和透视表功能实战 
****************************

import numpy as np
import pandas as pd
from pandas import Series, DataFrame
df = pd.read_csv('../homework/usa_flights.csv')
df.shape
df.head()
df.tail()
df.sort_values('arr_delay', ascending=False)[:10][['flight_date','unique_carrier','flight_num','origin','dest','arr_delay']]
df['cancelled'].value_counts()
df['delayed'] = df['arr_delay'].apply(lambda x: x > 0)
df.head()
delay_data = df['delayed'].value_counts()
delay_data[1]/(delay_data[0] + delay_data[1])
delay_group = df.groupby(['unique_carrier','delayed'])
df_delay = delay_group.size().unstack()
import matplotlib.pyplot as plt
df_delay.plot(kind='barh', stacked=True, figsize=[16,6], colormap='winter')
flights_by_carrier = df.pivot_table(index='flight_date', columns='unique_carrier', values='flight_num', aggfunc='count')
flights_by_carrier.head()
****************************************
数据分箱技术Binning 

import numpy as np
import pandas as pd
from pandas import Series, DataFrame

score_list = np.random.randint(25, 100, size=20)
bins = [0,59,70,80,100]
score_cat = pd.cut(score_list, bins)
pd.value_counts(score_cat)
df = DataFrame()
df['score'] = score_list
df['student'] = [pd.util.testing.rands(3) for i in range(20)]
df['Categories'] = pd.cut(df['score'],bins, labels=['Low','OK','Good','Great'])

******************************************


数据分组技术GroupBy 


import numpy as np
import pandas as pd
from pandas import Series, DataFrame
df = pd.read_csv('../homework/city_weather.csv')
g = df.groupby(df['city'])
g.groups
df_bj = g.get_group('BJ')
type(df_bj.mean())
g.mean()
dict(list(g))['BJ']
list(g)
for name, group_df in g:
    print(name)
    print(group_df)


select * from table_1 group by column_1

***************************************
数据聚合技术Aggregation

df = pd.read_csv('../homework/city_weather.csv')
g =df.groupby('city')
g.agg('min')
def foo(attr):
    return attr.max() - attr.min()

g.agg(foo)
g_new = df.groupby(['city', 'wind'])
g_new.get_group(('BJ',3))
g.get_group('BJ')
for (name_1,name_2), group in g_new:
    print(name_1,name_2)
    print(group)
    
**************************************

 时间序列数据的采样和画图 (未保存改变) 


import numpy as np
import pandas as pd
from pandas import Series, DataFrame
t_range = pd.date_range('2016-01-01', '2016-12-31')
s1 = Series(np.random.randn(len(t_range)), index=t_range)
s1['2016-01'].mean()
s1_month = s1.resample('M').mean()
s1_month.index
s1.resample('H').bfill()
t_range = pd.date_range('2016-01-01', '2016-12-31', freq='H')
stock_df = DataFrame(index=t_range)
stock_df['BABA'] = np.random.randint(80, 160, size=len(t_range))
stock_df['TENCENT'] = np.random.randint(30, 50, size=len(t_range))
stock_df.head()
stock_df.plot()
import matplotlib.pyplot as plt
plt.show()
weekly_df = DataFrame()
weekly_df['BABA'] = stock_df['BABA'].resample('W').mean()
weekly_df['TENCENT'] = stock_df['TENCENT'].resample('W').mean()
weekly_df.head()
weekly_df.plot()
plt.show()

****************************************
时间序列的操作基础 

import numpy as np
import pandas as pd
from pandas import Series, DataFrame
from datetime import datetime
t1 = datetime(2009,10,20)
date_list = [
    datetime(2016,9,1),
    datetime(2016,9,10),
    datetime(2017,9,1),
    datetime(2017,9,20),
    datetime(2017,10,1)
]
s1 = Series(np.random.rand(5), index=date_list)
s1.values
s1.index
s1[1]
s1[datetime(2016,9,10)]
s1['2016-9-10']
s1['20160910']
s1['2017-09']
s1['2016']
s1['2017']
date_list_new = pd.date_range('2016-01-01', periods=100, freq='5H')
s2 = Series(np.random.rand(100), index=date_list_new)
***************************************

透视表 

import numpy as np
import pandas as pd
from pandas import Series, DataFrame
df = pd.read_excel('../homework/sales-funnel.xlsx')
pd.pivot_table(df, index=['Manager','Rep'],values=['Price','Quantity'],columns=['Product'], fill_value=0, aggfunc='sum')
***************************************

通过apply进行数据预处理 

import numpy as np
import pandas as pd
from pandas import Series, DataFrame
df = pd.read_csv('../homework/apply_demo.csv')
df.head()
df.size
s1 = Series(['a']*7978)
df['A'] = s1
df.head()
df['A'] = df['A'].apply(str.upper)
df.head()
l1 = df['data'][0].strip().split(' ')
l1[1], l1[3],l1[5]
def foo(line):
    items = line.strip().split(' ')
    return Series([items[1], items[3], items[5]])
df_tmp = df['data'].apply(foo)
df_tmp = df_tmp.rename(columns={0:"Symbol", 1:"Seqno", 2:"Price"})
df_tmp.head()
df.head()
df_new = df.combine_first(df_tmp)
df_new.head()
del df_new['data']
del df_new['A']
df_new.head()
df_new.to_csv('../homework/demo_duplicate.csv')
*************************************

通过去重进行数据清洗 

import numpy as np
import pandas as pd
from pandas import Series, DataFrame
df = pd.read_csv('../homework/demo_duplicate.csv')
del df['Unnamed: 0']
df.size
len(df)
len(df['Seqno'].unique())
df.head(10)
df['Seqno'].duplicated()
df.drop_duplicates(['Seqno'],keep='last')
df.head()
****************************************

重命名DataFrame的Index 

import numpy as np
import pandas as pd
from pandas import Series, DataFrame
df1 = DataFrame(np.arange(9).reshape(3,3), index=['BJ','SH','GZ'], columns=['A','B','C'])
df1.index
df1.index = Series(['bj','sh','gz'])
df1.index
df1.rename(index=str.lower, columns=str.lower)
df1.rename(index={'BJ': 'beijing'}, columns={"A":'a'})
list1 = [1,2,3,4]
list2 = ['1','2','3','4']
[str(x) for x in list1]
list(map(str, list1))
def test_map(x):
    return x + '_ABC'
df1.index.map(test_map)
df1.rename(index=test_map)
